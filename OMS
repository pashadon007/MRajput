#!/bin/bash

# Prompt the user to enter the value for LAWID
read -p "Enter the value for LAWID: " LAWID

# Create the script file
touch ConnectivityToMonitorTest

# Define the commands with LAWID as a variable
cmds="cat /proc/sys/crypto/fips_enabled
curl $LAWID.ods.opinsights.azure.com
curl $LAWID.oms.opinsights.azure.com
nslookup $LAWID.ods.opinsights.azure.com
nslookup $LAWID.oms.opinsights.azure.com
nslookup $LAWID.agentsvc.azure-automation.net
netcat -vz $LAWID.ods.opinsights.azure.com 443
netcat -vz $LAWID.oms.opinsights.azure.com 443
netcat -vz $LAWID.agentsvc.azure-automation.net 443
echo | openssl s_client -connect $LAWID.ods.opinsights.azure.com:443 -servername $LAWID.ods.opinsights.azure.com
echo | openssl s_client -connect $LAWID.oms.opinsights.azure.com:443 -servername $LAWID.oms.opinsights.azure.com
echo | openssl s_client -connect $LAWID.agentsvc.azure-automation.net:443 -servername $LAWID.agentsvc.azure-automation.net
echo | openssl s_client -connect scadvisorcontent.blob.core.windows.net:443 -servername scadvisorcontent.blob.core.windows.net
python3 --version
sestatus
hostnamectl
cat /etc/*release
openssl version"

# Execute commands and append output to the script file
echo "$cmds" | while read -r cmd; do
    echo "$cmd" >> ConnectivityToMonitorTest
    echo "----------------------------------------" >> ConnectivityToMonitorTest
    eval "$cmd" >> ConnectivityToMonitorTest 2>&1
    echo "" >> ConnectivityToMonitorTest
done

echo "The script has finished running, and the output is saved in ConnectivityToMonitorTest"
cat ConnectivityToMonitorTest
